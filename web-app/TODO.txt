
1. Grab UPC code from {cam image, 'file upload button', Full text search}
    Error handle 
        1. Make sure user uploads image OR proper string for full text search
        2. 

2. IF image, process barcode using pybarz javascript equivalent
    Error handle: 
        1. Check to make sure its an image
        2. Check to make sure function returned proper UPC code
        3. Handle error from packages neatly

2b. IF string, pass string to openfood db
    Error handling
        1. Check to make sure user enters string
        2. Check to make sure user selects ONE entry OR next page button

    1. Hits openfood db API with full text search and returns top ten results {name, upc code, image}
    2. User selects whick product is the correct one
    3. If product is not found, return next ten results and repeat
    4. Once product is found, send UPC code to openfood db

3. Hit openfood database API for food breakdown using UPC code
    Error handle:
        1. make sure response is 200 and contents are returned properly
        2. Handle errors from package neatly
    1. Grab: "code": "3017620422003", // Replace with the actual UPC code
            "product_name": null,
            "generic_name": null,
            "brands": null,
            "categories": null,
            "ingredients": null,
            "nutriments": null,
            "image_front_url": null,
            "image_nutrition_url": null,
            "ecoscore_grade": null,
            "ecoscore_score": null,
            "nutriscore_grade": null,
            "nutriscore_score": null,
            "nutrient_levels": null,
            "states": null 
        

4. Store returned info in db
    Error handle:
        1. Confirm db is loaded 
        2. Confirm data table exist
        3. Check whether product exist in db, if not, store
        4. Handle errors from package neatly
    

5. Visualize contents in db
    Error handle:
        1.Confirm necessary data is stored in local storage
        2.

    1. Show macros count/daily goal
    2. Show nutrient breakdown of each food
    3. Show food grade 
    4. Show overall grade based on averages generated from food grades
    5. Show top 'healthy' foods and 'non-healthy' foods
    Interesting visualition ideas generated by claude 3.5:
        Interactive Digital Nutrition Label:
        Create an enhanced, interactive version of a traditional nutrition label. Include all standard nutritional information, but make it interactive. Users can click on nutrients to see their percentage of daily value, hover over ingredients for definitions, and toggle between different serving sizes.

        Product Dashboard Card:
        Design a dashboard-style card with multiple sections: nutritional overview, ingredient list, environmental impact, and product images. Use mini-charts within each section (e.g., a small pie chart for macronutrient breakdown). Include a QR code that links to more detailed information.

        Infographic-Style Product Profile:
        Develop an infographic-like layout that visually represents all product data. Use icons, color coding, and simple charts to display nutrition facts, ingredient proportions, eco-score, and nutri-score. Include a visual scale to show where the product falls in terms of healthiness and sustainability compared to similar products.

        Expandable Product Accordion:
        Create a card with collapsible sections. The main view shows key information (product name, image, basic nutrition), and users can expand sections for detailed nutrition, ingredients, environmental impact, and product origin/processing information.

        3D Product Cube:
        Design a 3D cube interface where each face represents a different aspect of the product: nutrition, ingredients, environmental impact, product images, health score, and user reviews/notes. Users can rotate the cube to view different faces.

        Radial Product Information Display:
        Develop a circular design with the product image or name in the center. Surround it with circular segments representing different data categories (nutrition, ingredients, eco-score, etc.). Users can click on segments to expand and see more detailed information.

        Product Journey Timeline:
        Create a horizontal timeline-style card that tells the "story" of the product. Start with sourcing/origin, move through processing/ingredients, then nutrition, and end with environmental impact and disposal information. Use icons and small charts along the timeline to represent data at each stage.


Long term goals 
    1. Authoriation/login handle and logic
    2. Mobile app
    3. Security
    4. Reciepe and diet dbs 
